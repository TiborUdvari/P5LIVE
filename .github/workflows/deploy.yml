name: Deploy latest image

on:
  push:
    branches:
      - main

jobs:
  build-deploy-notify:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build latest version
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: tiborudvari/p5live:latest

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          
          if [ -z "${{ secrets.VPS_HOST }}" ]; then
            echo "❌ VPS_HOST is not set!"
            exit 1
          fi

          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Deploy over SSH manually
        run: |
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            set -e
            
            echo "Logging into Docker..."
            echo "${{ secrets.DOCKER_PASSWORD}}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            docker stop p5live_container > /dev/null 2>&1 || true
            docker rm p5live_container > /dev/null 2>&1 || true
            
            echo "Running the new p5live container..."
            docker run -d --name p5live_container -p 8000:8000 --pull=always tiborudvari/p5live:latest
            
            echo "Currently running Docker containers:"
            docker ps
  
            echo "Pruning all unused Docker objects including volumes..."
            docker system prune -af --volumes
          EOF
        shell: bash

